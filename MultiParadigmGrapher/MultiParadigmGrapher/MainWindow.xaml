<Window x:Class="MultiParadigmGrapher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:oxy="http://oxyplot.codeplex.com"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        Icon="/logo.png"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Title="SchemeGrapher" Height="700" Width="1000">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" MaxWidth="500"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <GroupBox Header="Functions" Margin="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <ListBox Name="functionlsbx" BorderBrush="Transparent" 
                             Grid.ColumnSpan="2" SelectionMode="Extended" SelectedIndex="0"
                             SelectedItem="{Binding SelectedFunction, Mode=TwoWay}" 
                             ItemsSource="{Binding Functions}" HorizontalContentAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel LastChildFill="True">
                                    <Rectangle DockPanel.Dock="Left" VerticalAlignment="Stretch" Margin="5" Width="18" Fill="{Binding Color}"/>
                                    <CheckBox DockPanel.Dock="Left" Margin="5" IsChecked="{Binding IsEnabled}"/>
                                    <TextBlock Margin="5" Foreground="Black" Text="{Binding Name}"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Button Content="Add function" Command="{Binding AddFunctionCommand}" Grid.Column="0" Grid.Row="1" Margin="5" />
                    <Button Content="Delete function(s)" Command="{Binding DeleteFunctionCommand}" CommandParameter="{Binding SelectedItems, ElementName=functionlsbx}" Grid.Column="1" Grid.Row="1" Margin="5" />
                    
                </Grid>
                
            </GroupBox>

            <Expander Grid.Row="1" Margin="5" Header="Function settings" IsEnabled="{Binding SelectedFunction, Converter={StaticResource NullToBoolean}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Row="0" Grid.Column="0" LastChildFill="True">
                        <Grid DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0" Margin="5" Text="Name"/>
                            <TextBox Grid.Column="1" Margin="5" Text="{Binding SelectedFunction.Name}"/>
                        </Grid>
                        
                        <CheckBox Margin="5" DockPanel.Dock="Top"  Content="Show derivative" IsChecked="{Binding SelectedFunction.ShowDerivative}"/>

                        <GroupBox Margin="5" Header="Resolution">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Content="St_ep"/>
                                <TextBox Grid.Column="1" Grid.Row="0" MinWidth="40" Margin="5" Text="{Binding SelectedFunction.Step, ValidatesOnExceptions=True}"/>
                                <Label Grid.Column="0" Grid.Row="1" Content="S_amples"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Margin="5" Text="{Binding SelectedFunction.Samples, ValidatesOnExceptions=True}"/>
                            </Grid>
                        </GroupBox>

                    </DockPanel>                    

                    <GroupBox Margin="5" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                        <GroupBox.Header>
                            <CheckBox Content="Show integral" IsChecked="{Binding SelectedFunction.ShowIntegral}"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.Row="0" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Content="Minimum"/>
                            <TextBox Grid.Column="1" Grid.Row="0" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Margin="5" Text="{Binding SelectedFunction.IntegralMin, ValidatesOnExceptions=True}"/>
                            <Label Grid.Column="0" Grid.Row="1" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Content="Maximum"/>
                            <TextBox Grid.Column="1" Grid.Row="1" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Margin="5" Text="{Binding SelectedFunction.IntegralMax, ValidatesOnExceptions=True}"/>
                            <Label Grid.Column="0" Grid.Row="2" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Content="Resolution"/>
                            <TextBox Grid.Column="1" Grid.Row="2" IsEnabled="{Binding SelectedFunction.ShowIntegral}" Margin="5" Text="{Binding SelectedFunction.IntegralRes, ValidatesOnExceptions=True}"/>
                            
                            <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Column="0" IsEnabled="{Binding SelectedFunction.ShowIntegral}" 
                                             IsChecked="{Binding SelectedFunction.IsLeftIntegral, Mode=TwoWay}" Content="Left" Margin="5" 
                                             GroupName="integralmode"/>
                                <RadioButton Grid.Column="1" IsEnabled="{Binding SelectedFunction.ShowIntegral}" 
                                             IsChecked="{Binding SelectedFunction.IsMiddleIntegral, Mode=TwoWay}" Content="Middle" Margin="5" 
                                             GroupName="integralmode"/>
                                <RadioButton Grid.Column="2" IsEnabled="{Binding SelectedFunction.ShowIntegral}" 
                                             IsChecked="{Binding SelectedFunction.IsRightIntegral, Mode=TwoWay}" Content="Right" Margin="5" 
                                             GroupName="integralmode"/>                                                               
                            </Grid>
                        </Grid>
                    </GroupBox>                                      

                </Grid>
            </Expander>

            <GroupBox Grid.Row="2" Margin="5" Header="Function" IsEnabled="{Binding SelectedFunction, Converter={StaticResource NullToBoolean}}">
                <avalonEdit:TextEditor                    
                    FontFamily="Consolas"
                    Margin="5"
                    Document="{Binding CodeDocument}"
                    SyntaxHighlighting="{Binding SyntaxHighlighting}"                    
                    FontSize="10pt" ShowLineNumbers="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"/>
            </GroupBox>

            <Button Grid.Row="3" Margin="5" Content="Apply" IsDefault="True" Command="{Binding ApplyFunctionCommand}" IsEnabled="{Binding SelectedFunction, Converter={StaticResource NullToBoolean}}" />

            <GroupBox Grid.Row="4" Margin="5" Header="Output" IsEnabled="{Binding SelectedFunction, Converter={StaticResource NullToBoolean}}">
                <ItemsControl ItemsSource="{Binding SelectedFunction.Log, NotifyOnTargetUpdated=True}" Style="{StaticResource LogViewerStyle}" 
                              Name="logView" Loaded="logView_Loaded"/>
            </GroupBox>
        </Grid>

        <DockPanel Margin="5" LastChildFill="True" Grid.Column="1">
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <GroupBox Grid.Column="0"  Header="X-axis">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Margin="5" Grid.Column="0" Text="Min"/>
                        <TextBox Margin="5" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding XMin, ValidatesOnExceptions=True}"/>
                        <TextBlock Margin="5" Grid.Column="2" Text="Max"/>
                        <TextBox Margin="5" Grid.Column="3" HorizontalAlignment="Stretch" Text="{Binding XMax, ValidatesOnExceptions=True}"/>
                        
                        <GroupBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                            <GroupBox.Header>
                                <RadioButton IsChecked="{Binding IsXLogarithmic, Mode=TwoWay}" GroupName="xaxis" Content="Logarithmic"/>
                            </GroupBox.Header>
                            
                            <ComboBox Margin="3" IsEnabled="{Binding IsXLogarithmic}" IsEditable="False" SelectedIndex="0" 
                                      ItemsSource="{Binding LogarithmicBases}" SelectedItem="{Binding XLogarithmicBase, Mode=TwoWay}" />
                        </GroupBox>

                        <RadioButton Grid.Column="2" IsChecked="{Binding IsXLinear, Mode=TwoWay}" 
                                     HorizontalAlignment="Center" VerticalAlignment="Center" 
                                     Grid.ColumnSpan="2" Grid.Row="1" 
                                     GroupName="xaxis" Content="Linear"/>
                    </Grid>                                               
                </GroupBox>

                <GroupBox Grid.Column="1" Header="Y-axis">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Margin="5" Grid.Column="0" Text="Min"/>
                        <TextBox Margin="5" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding YMin, ValidatesOnExceptions=True}"/>
                        <TextBlock Margin="5" Grid.Column="2" Text="Max"/>
                        <TextBox Margin="5" Grid.Column="3" HorizontalAlignment="Stretch" Text="{Binding YMax, ValidatesOnExceptions=True}"/>

                        <GroupBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                            <GroupBox.Header>
                                <RadioButton IsChecked="{Binding IsYLogarithmic, Mode=TwoWay}" GroupName="yaxis" Content="Logarithmic"/>
                            </GroupBox.Header>

                            <ComboBox Margin="3" IsEnabled="{Binding IsYLogarithmic}" IsEditable="False" SelectedIndex="0" 
                                      ItemsSource="{Binding LogarithmicBases}" SelectedItem="{Binding YLogarithmicBase, Mode=TwoWay}" />
                        </GroupBox>

                        <RadioButton Grid.Column="2" IsChecked="{Binding IsYLinear, Mode=TwoWay}" 
                                     HorizontalAlignment="Center" VerticalAlignment="Center" 
                                     Grid.ColumnSpan="2" Grid.Row="1" 
                                     GroupName="yaxis" Content="Linear"/>

                    </Grid>
                </GroupBox>
            </Grid>

            <oxy:Plot DockPanel.Dock="Bottom" Model="{Binding PlotModel}"/>
            <!--<TextBlock DockPanel.Dock="Bottom" Text="DET ER LORT" />-->
        </DockPanel>

    </Grid>
</Window>
